anova.test1 = anova(mod, mod.attack, test="Chisq")
#find loglikelihood
loglik.mod = anova.test1$logLik[2]
loglik.mod
loglik.attack = anova.test1$logLik[1]
#find LRT
LRT.test1 = -2* (loglik.attack - loglik.mod )
#find pvalue
pvalue.test1 = 2*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
anova.test2 = anova(mod, mod.defence, test="Chisq")
#find loglikelihood
loglik.defence = anova.test2$logLik[1]
#find LRT
LRT.test2 = -2* (loglik.defence - loglik.mod )
#find pvalue
pvalue.test2 = 2*pchisq(LRT.test2, 1)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
anova.test1 = anova(mod, mod.attack, test="Chisq")
#find loglikelihood
loglik.mod = anova.test1$logLik[2]
loglik.mod
loglik.attack = anova.test1$logLik[1]
loglik.attack
#find LRT
LRT.test1 = -2* (loglik.attack - loglik.mod )
#find pvalue
pvalue.test1 = 2*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
anova.test2 = anova(mod, mod.defence, test="Chisq")
#find loglikelihood
loglik.defence = anova.test2$logLik[1]
#find LRT
LRT.test2 = -2* (loglik.defence - loglik.mod )
#find pvalue
pvalue.test2 = 2*pchisq(LRT.test2, 1)
#compare likelihood
loglik.attack
loglik.defence
loglik.fixed
loglik.mod
anova(mod, mod.intercept, test="Chisq")$logLik
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
anova.test1 = anova(mod, mod.attack, test="Chisq")
#find loglikelihood
loglik.mod = anova.test1$logLik[2]
loglik.attack = anova.test1$logLik[1]
#find LRT
LRT.test1 = -2* (loglik.attack - loglik.mod )
#find pvalue
pvalue.test1 = 2*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
anova.test2 = anova(mod, mod.defence, test="Chisq")
#find loglikelihood
loglik.defence = anova.test2$logLik[1]
#find LRT
LRT.test2 = -2* (loglik.defence - loglik.mod )
#find pvalue
pvalue.test2 = 2*pchisq(LRT.test2, 1)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
anova.fixed = anova(mod, mod.intercept,test="Chisq")
loglik.fixed = anova.fixed$logLik[1]
#compare likelihood
loglik.attack
loglik.defence
loglik.fixed
loglik.mod
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
anova.fixed = anova(mod, mod.intercept,test="Chisq")
loglik.fixed = anova.fixed$logLik[1]
anova.fixed
loglik(mod.attack)
logLik(mod.attack)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2* (logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2* (logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 2*pchisq(LRT.test2, 1)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2* (logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2* (logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2* (logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 2*pchisq(LRT.test2, 1)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2* (logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2* (logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1)
pvalue.test1
pvalue.test2
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
logLik(mod.attack)
LRT.test1
LRT.test1[2]
LRT.test1[1]
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1[1], 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2[1], 1)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1[1], 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2[1], 1)
LRT.test1
LRT.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2[1], 1)
LRT.test1
LRT.test2
alpha = 0.05 #significance level
c = qchisq(1-2*alpha, df = 1)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
c
LRT.test1
LRT.test2
re <- ranef(mod)
effect <- re$cond$attack - re$cond$defence #Calculate the difference between attack and defence
effect2 <- c(effect[6,1], effect[10,1], effect[14,1], effect[12,1], effect[7,1],effect[3,1],effect[1,1],effect[5,1], effect[13,1],effect[15,1],effect[11,1],effect[9,1],effect[4,1],effect[16,1],effect[8,1],effect[2,1]) #Reorder the elements
plot(totalrank, effect2) #Plot the effect towards the rank
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
#find LRT
LRT.test3 = -2*(logLik(mod.intercept) - logLik(mod))[1]
#find pvalue
pvalue.test1 = pchisq(LRT.test3, 1)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
#find LRT
LRT.test3 = -2*(logLik(mod.intercept) - logLik(mod))[1]
#find pvalue
pvalue.test3 = pchisq(LRT.test3, 1)
anova(mod.intercept,mod)
pvalue.test3
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
#find LRT
LRT.test3 = -2*(logLik(mod.intercept) - logLik(mod))[1]
#find pvalue
pvalue.test3 = pchisq(LRT.test3, 1)
anova(mod.intercept,mod)
pvalue.test3
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
#find LRT
LRT.test3 = -2*(logLik(mod.intercept) - logLik(mod))[1]
#find pvalue
pvalue.test3 = 1- pchisq(LRT.test3, 1)
anova(mod.intercept,mod)
pvalue.test3
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 1- 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
pvalue.test1
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 1 - 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
pvalue.test1
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test2
alpha = 0.05 #significance level
c = qchisq(1-2*alpha, df = 1)
LRT.test2
alpha = 0.05 #significance level
c = qchisq(1-2*alpha, df = 1)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
pvalue.test1
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test2
#find pvalue
pvalue.test1 = 0.5*dchisq(LRT.test1, 1) + 0.5*dchisq(LRT.test1, 0)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*dchisq(LRT.test1, 1) + 0.5*dchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*dchisq(LRT.test1, 1) + 0.5*dchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*dchisq(LRT.test2, 1) + 0.5*dchisq(LRT.test2, 0)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 1- 0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0)
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 1- 0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0)
pvalue.test1
pvalue.test2
#Testing significance of attack parameter
#mod.attack:attack as only random effect
#mod: two random effects
mod.attack <- update(mod,. ~ home +(1|attack))
#find LRT
LRT.test1 = -2*(logLik(mod.attack) - logLik(mod))[1]
#find pvalue
pvalue.test1 = 1- (0.5*pchisq(LRT.test1, 1) + 0.5*pchisq(LRT.test1, 0) )
# Testing significance of defence parameter
#mod.defence: defence as only random effect
mod.defence <- update(mod,. ~ home +(1|defence))
#find LRT
LRT.test2 = -2*(logLik(mod.defence) - logLik(mod) )[1]
#find pvalue
pvalue.test2 = 1- (0.5*pchisq(LRT.test2, 1) + 0.5*pchisq(LRT.test2, 0) )
pvalue.test1
pvalue.test2
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=TRUE)
#find LRT
LRT.test3 = -2*(logLik(mod.intercept) - logLik(mod))[1]
#find pvalue
pvalue.test3 = 1-pchisq(LRT.test3, 1)
#model based on MLE
mod.mle <- glmmTMB(goals ~ home + (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.mle.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#find LRT
LRT.test3 = -2*(logLik(mod.mle.intercept) - logLik(mod.mle))[1]
#find pvalue
pvalue.test3 = 1-pchisq(LRT.test3, 1)
pvalue.test3
#model based on MLE
mod.mle <- glmmTMB(goals ~ home + (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.mle.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#find LRT
LRT.test3 = -2*(logLik(mod.mle.intercept) - logLik(mod.mle))[1]
#find pvalue
pvalue.test3 = 1-pchisq(LRT.test3, 1)
pvalue.test3
anova(mod.mle, mod.mle.intercept)
#model based on MLE
mod.mle <- glmmTMB(goals ~ home + (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#mod.intercept: attack and defence as random effects, only intercept as fixed effect
mod.mle.intercept = glmmTMB(goals ~ (1|attack) + (1|defence), poisson, data=long, REML=FALSE)
#find LRT
LRT.test3 = -2*(logLik(mod.mle.intercept) - logLik(mod.mle))[1]
#find p-value
pvalue.test3 = 1-pchisq(LRT.test3, 1)
alpha = 0.05 #significance level
c = round ( qchisq(1-2*alpha, df = 1),2)
c
summary(mod)$cond
summary(mod)
summary(mod)$coefficients
summary(mod)$coefficients[1]
ranef(mod)
summary(mod)$coefficients[1]
#find effect of covariate
exp(beta1)
summary(mod)$coefficients[1]
ranef(mod)
#extract fixed effects from summary of model
beta0 = summary(mod)$coef$cond[1]
beta1 = summary(mod)$coef$cond[2]
#find effect of covariate
beta1_factor = exp(beta1)
ranef(mod)$attack
ranef(mod)$cond$attack
summary(mod)$coefficients[1]
cbind(ranef(mod)$cond$attack, ranef(mod)$cond$defence)
#extract fixed effects from summary of model
beta0 = summary(mod)$coef$cond[1]
beta1 = summary(mod)$coef$cond[2]
#find effect of covariate
beta1_factor = exp(beta1)
ranef(mod)$cond$attack
cbind(ranef(mod)$cond$attack, ranef(mod)$cond$defence)
